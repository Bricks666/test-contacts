{"version":3,"file":"static/js/206.6d1572b6.chunk.js","mappings":"2PAEaA,GAAgBC,EAAAA,EAAAA,IAAO,MAAPA,CAAH,8D,4DCCbC,GAAaD,EAAAA,EAAAA,IAAO,OAAPA,CAAH,uGAMVE,GAAcF,EAAAA,EAAAA,IAAOG,EAAAA,EAAPH,CAAH,gD,uCCNXI,EAAcC,IAAAA,OAA6B,CACvDC,MAAOD,IAAAA,SAAaE,IAAI,GAAGC,WAAWC,SAAS,CAC9C,eAAgB,oIAChB,aAAc,0OAGfC,SAAUL,IAAAA,SAAaE,IAAI,GAAGC,WAAWC,SAAS,CACjD,eAAgB,0IAChB,aAAc,gPAEfE,WAAYN,IAAAA,Y,kKCOAO,EAAW,SACvBC,GAEA,IACCC,EAQGD,EARHC,KACAC,EAOGF,EAPHE,QACAC,EAMGH,EANHG,aACAC,EAKGJ,EALHI,MACAC,EAIGL,EAJHK,iBACAC,EAGGN,EAHHM,UAND,EASIN,EAFHO,MAAAA,OAPD,MAOS,GAPT,EAQIC,GARJ,OASIR,EATJ,GAUA,GAA8BS,EAAAA,EAAAA,IAAc,CAC3CR,KAAAA,EACAC,QAAAA,EACAC,aAAAA,EACAC,MAAAA,EACAC,iBAAAA,IALOK,EAAR,EAAQA,MAQAC,EARR,EAAeC,WAQPD,MACAE,EAA0BH,EAA1BG,IAAQC,GAAhB,OAAkCJ,EAAlC,GAEA,OACC,UAACK,EAAA,EAAD,CAAaJ,QAASA,EAAOK,QAAQ,WAArC,WACC,SAACC,EAAA,EAAD,CACCX,UAAWA,EACXY,eAAe,MACfX,MAAOA,EACPL,SAAS,SAAC,KAAD,kBAAiBY,GAAjB,IAAgCK,SAAUN,GAASL,OAE7D,SAACY,EAAA,EAAD,iBAAiBT,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAOU,YAG1B,EC1CYC,EAAsCC,EAAAA,MAClD,SAAmBvB,GAClB,IAAQM,EAAcN,EAAdM,UAEFkB,GAAWC,EAAAA,EAAAA,KAEjB,GAAoDC,EAAAA,EAAAA,IAA0B,CAC7EC,cAAe,CACdlC,MAAO,GACPI,SAAU,GACVC,YAAY,GAEb8B,UAAUC,EAAAA,EAAAA,GAAYtC,KANfuC,EAAR,EAAQA,MAAO5B,EAAf,EAAeA,QAAS6B,EAAxB,EAAwBA,UAAWC,EAAnC,EAAmCA,aAS7BC,EAAWV,EAAAA,YAAA,yCAChB,WAAOW,GAAP,sFACOV,GAASW,EAAAA,EAAAA,IAAWD,IAD3B,OAECJ,IAFD,2CADgB,sDAKhB,CAACA,IAGMM,EAA0BL,EAA1BK,QAASC,EAAiBN,EAAjBM,aACXC,GAAiBF,GAAWC,EAElC,OACC,UAACjD,EAAD,CAAY6C,SAAUD,EAAaC,GAAW3B,UAAWA,EAAzD,WACC,SAACjB,EAAD,CACCY,KAAK,QACLC,QAASA,EACTK,MAAM,oCAEP,SAAClB,EAAD,CACCY,KAAK,WACLC,QAASA,EACTqC,KAAK,WACLhC,MAAM,0CAEP,SAACR,EAAD,CACCE,KAAK,aACLC,QAASA,EACTK,MAAM,qFAEP,SAACiC,EAAA,EAAD,CAAQxB,QAAQ,WAAWuB,KAAK,SAASE,SAAUH,EAAnD,8CAKF,I,UCpDWI,EAA8BnB,EAAAA,MAAW,SAAevB,GACpE,IAAQM,EAAcN,EAAdM,UACFK,GAAQgC,EAAAA,EAAAA,GAAiBC,EAAAA,IAC/B,OACC,UAAC1D,EAAD,CAAeoB,UAAWA,EAA1B,YACIK,IACF,UAACkC,EAAA,EAAD,CAAOC,SAAS,QAAhB,WACC,SAACC,EAAA,EAAD,kFACCpC,MAGH,SAACW,EAAD,MAGF,ICpBY0B,GAAkB7D,EAAAA,EAAAA,IAAO8D,EAAAA,EAAP9D,CAAH,oIASf+D,GAAc/D,EAAAA,EAAAA,IAAOuD,EAAPvD,CAAH,yCCaxB,EAnB4B,WAC3B,IAAMgE,GAASR,EAAAA,EAAAA,GAAiBS,EAAAA,IAC1BC,GAAWC,EAAAA,EAAAA,MAOjB,OALA/B,EAAAA,iBAAsB,WACjB4B,GACHE,EAAS,YAEV,GAAE,CAACF,KAEH,UAACH,EAAD,YACC,SAACO,EAAA,EAAD,CAAYvC,QAAQ,KAAKwC,MAAM,SAASC,UAAU,KAAlD,uCAGA,SAACP,EAAD,MAGF,C","sources":["components/Login/styles.ts","components/LoginForm/styles.ts","components/LoginForm/scheme.ts","components/Checkbox/Checkbox.tsx","components/LoginForm/LoginForm.tsx","components/Login/Login.tsx","pages/Login/styles.ts","pages/Login/LoginPage.tsx"],"sourcesContent":["import { styled } from '@mui/material/styles';\n\nexport const StylesWrapper = styled('div')`\n\tdisplay: grid;\n\trow-gap: 15px; ;\n`;\n","import { styled } from '@mui/material/styles';\nimport { Field } from '../Field';\n\nexport const StyledForm = styled('form')`\n\tdisplay: grid;\n\tgrid-template-columns: 1fr max-content;\n\trow-gap: 10px;\n`;\n\nexport const StyledField = styled(Field)`\n\tgrid-column: span 2;\n`;\n","import Joi from 'joi';\nimport { LoginThunkParams } from '@/models/auth';\n\nexport const loginScheme = Joi.object<LoginThunkParams>({\n\tlogin: Joi.string().min(6).required().messages({\n\t\t'string.empty': 'Логин должен быть введен',\n\t\t'string.min': 'Логин должен содержать не менее 5ти символов',\n\t}),\n\n\tpassword: Joi.string().min(6).required().messages({\n\t\t'string.empty': 'Пароль должен быть введен',\n\t\t'string.min': 'Пароль должен содержать не менее 5ти символов',\n\t}),\n\trememberMe: Joi.boolean(),\n});\n","import * as React from 'react';\nimport {\n\tFieldValues,\n\tuseController,\n\tUseControllerProps,\n} from 'react-hook-form';\nimport {\n\tFormControlLabel,\n\tCheckbox as MUICheckbox,\n\tFormControl,\n\tFormHelperText,\n} from '@mui/material';\nimport { CommonProps } from '@/interfaces/common';\n\nexport interface CheckboxProps<F extends FieldValues>\n\textends CommonProps,\n\t\tUseControllerProps<F> {\n\treadonly label?: string;\n}\n\nexport const Checkbox = function Checkbox<F extends FieldValues>(\n\tprops: CheckboxProps<F>\n) {\n\tconst {\n\t\tname,\n\t\tcontrol,\n\t\tdefaultValue,\n\t\trules,\n\t\tshouldUnregister,\n\t\tclassName,\n\t\tlabel = '',\n\t\t...rest\n\t} = props;\n\tconst { field, fieldState } = useController({\n\t\tname,\n\t\tcontrol,\n\t\tdefaultValue,\n\t\trules,\n\t\tshouldUnregister,\n\t});\n\n\tconst { error } = fieldState;\n\tconst { ref, ...checkboxProps } = field;\n\n\treturn (\n\t\t<FormControl error={!!error} variant='outlined'>\n\t\t\t<FormControlLabel\n\t\t\t\tclassName={className}\n\t\t\t\tlabelPlacement='end'\n\t\t\t\tlabel={label}\n\t\t\t\tcontrol={<MUICheckbox {...checkboxProps} inputRef={ref} {...rest} />}\n\t\t\t/>\n\t\t\t<FormHelperText>{error?.message}</FormHelperText>\n\t\t</FormControl>\n\t);\n};\n","import * as React from 'react';\nimport { Control, SubmitHandler, useForm } from 'react-hook-form';\nimport { joiResolver } from '@hookform/resolvers/joi';\nimport { Button } from '@mui/material';\nimport { CommonProps } from '@/interfaces/common';\nimport { StyledField, StyledForm } from './styles';\nimport { loginThunk, LoginThunkParams } from '@/models/auth';\nimport useTypedDispatch from '@/hooks/useTypedDispatch';\nimport { loginScheme } from './scheme';\nimport { Checkbox } from '../Checkbox';\n\nexport interface LoginFormProps extends CommonProps {}\n\nexport const LoginForm: React.FC<LoginFormProps> = React.memo(\n\tfunction LoginForm(props) {\n\t\tconst { className } = props;\n\n\t\tconst dispatch = useTypedDispatch();\n\n\t\tconst { reset, control, formState, handleSubmit } = useForm<LoginThunkParams>({\n\t\t\tdefaultValues: {\n\t\t\t\tlogin: '',\n\t\t\t\tpassword: '',\n\t\t\t\trememberMe: false,\n\t\t\t},\n\t\t\tresolver: joiResolver(loginScheme),\n\t\t});\n\n\t\tconst onSubmit = React.useCallback<SubmitHandler<LoginThunkParams>>(\n\t\t\tasync (data) => {\n\t\t\t\tawait dispatch(loginThunk(data));\n\t\t\t\treset();\n\t\t\t},\n\t\t\t[reset]\n\t\t);\n\n\t\tconst { isDirty, isSubmitting } = formState;\n\t\tconst disableButton = !isDirty || isSubmitting;\n\n\t\treturn (\n\t\t\t<StyledForm onSubmit={handleSubmit(onSubmit)} className={className}>\n\t\t\t\t<StyledField\n\t\t\t\t\tname='login'\n\t\t\t\t\tcontrol={control as unknown as Control}\n\t\t\t\t\tlabel='Логин'\n\t\t\t\t/>\n\t\t\t\t<StyledField\n\t\t\t\t\tname='password'\n\t\t\t\t\tcontrol={control as unknown as Control}\n\t\t\t\t\ttype='password'\n\t\t\t\t\tlabel='Пароль'\n\t\t\t\t/>\n\t\t\t\t<Checkbox\n\t\t\t\t\tname='rememberMe'\n\t\t\t\t\tcontrol={control as unknown as Control}\n\t\t\t\t\tlabel='Запомнить меня'\n\t\t\t\t/>\n\t\t\t\t<Button variant='outlined' type='submit' disabled={disableButton}>\n\t\t\t\t\tВойти\n\t\t\t\t</Button>\n\t\t\t</StyledForm>\n\t\t);\n\t}\n);\n","import * as React from 'react';\nimport { Alert, AlertTitle } from '@mui/material';\nimport { CommonProps } from '@/interfaces/common';\nimport { StylesWrapper } from './styles';\nimport { LoginForm } from '../LoginForm';\nimport useTypedSelector from '@/hooks/useTypedSelector';\nimport { getAuthError } from '@/models/auth';\n\nexport interface LoginProps extends CommonProps {}\n\nexport const Login: React.FC<LoginProps> = React.memo(function Login(props) {\n\tconst { className } = props;\n\tconst error = useTypedSelector(getAuthError);\n\treturn (\n\t\t<StylesWrapper className={className}>\n\t\t\t{!!error && (\n\t\t\t\t<Alert severity='error'>\n\t\t\t\t\t<AlertTitle>Ошибка входа</AlertTitle>\n\t\t\t\t\t{error}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<LoginForm />\n\t\t</StylesWrapper>\n\t);\n});\n","import { Container } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { Login } from '@/components/Login';\n\nexport const StyledContainer = styled(Container)`\n\tdisplay: grid;\n\talign-items: center;\n\tjustify-items: center;\n\trow-gap: 30px;\n\n\tpadding: 10px 0;\n`;\n\nexport const StyledLogin = styled(Login)`\n\twidth: 300px;\n`;\n","import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Typography } from '@mui/material';\nimport { StyledContainer, StyledLogin } from './styles';\nimport useTypedSelector from '@/hooks/useTypedSelector';\nimport { getIsAuth } from '@/models/auth';\n\nconst LoginPage: React.FC = () => {\n\tconst isAuth = useTypedSelector(getIsAuth);\n\tconst navigate = useNavigate();\n\n\tReact.useLayoutEffect(() => {\n\t\tif (isAuth) {\n\t\t\tnavigate('/contacts');\n\t\t}\n\t}, [isAuth]);\n\treturn (\n\t\t<StyledContainer>\n\t\t\t<Typography variant='h2' align='center' component='h1'>\n\t\t\t\tВход\n\t\t\t</Typography>\n\t\t\t<StyledLogin />\n\t\t</StyledContainer>\n\t);\n};\n\nexport default LoginPage;\n"],"names":["StylesWrapper","styled","StyledForm","StyledField","Field","loginScheme","Joi","login","min","required","messages","password","rememberMe","Checkbox","props","name","control","defaultValue","rules","shouldUnregister","className","label","rest","useController","field","error","fieldState","ref","checkboxProps","FormControl","variant","FormControlLabel","labelPlacement","inputRef","FormHelperText","message","LoginForm","React","dispatch","useTypedDispatch","useForm","defaultValues","resolver","joiResolver","reset","formState","handleSubmit","onSubmit","data","loginThunk","isDirty","isSubmitting","disableButton","type","Button","disabled","Login","useTypedSelector","getAuthError","Alert","severity","AlertTitle","StyledContainer","Container","StyledLogin","isAuth","getIsAuth","navigate","useNavigate","Typography","align","component"],"sourceRoot":""}